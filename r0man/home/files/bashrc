# -*- mode: sh -*-

# .BASH_PROFILE VS .BASHRC
# http://www.joshstaiger.org/archives/2005/07/bash_profile_vs.html

# If not running interactively, don't do anything
[[ $- != *i* ]] && return

PS1='[\u@\h \W]\$ '

## GUIX

GUIX_PROFILE="$HOME/.guix-extra-profiles/r0man/profiles/emacs-native-comp"
. "$GUIX_PROFILE/etc/profile"


# Load bash aliases.
[ -r ~/.bash_aliases ] && . ~/.bash_aliases

## AUTOJUMP
[ -r /etc/profile.d/autojump.bash ] && . /etc/profile.d/autojump.bash

# Use bash-completion, if available
[[ $PS1 && -f /usr/share/bash-completion/bash_completion ]] && . /usr/share/bash-completion/bash_completion

## BASH

# Preserve Bash History in Multiple Terminal Windows
# https://www.baeldung.com/linux/preserve-history-multiple-windows
shopt -s histappend
PROMPT_COMMAND="${PROMPT_COMMAND:+$PROMPT_COMMAND$'\n'}history -a; history -c; history -r"

## GPG

GPG_TTY=$(tty)
export GPG_TTY

gpg-connect-agent /bye

## Keychain
#eval $(keychain --eval --agents "gpg,ssh" --quiet id_rsa)

## SOLARIZED

export SOLARIZED="dark"
if [ -e ~/.dotfiles/dircolors.ansi-$SOLARIZED ]; then
    eval `dircolors ~/.dotfiles/dircolors.ansi-$SOLARIZED`
fi

## COURSIER

export PATH="$PATH:/home/roman/.local/share/coursier/bin"

## FLUTTER

export CHROME_EXECUTABLE="chromium"
export PATH="$PATH:$HOME/local/flutter/bin"

## HIGH DPI

export GDK_SCALE=1.5
export GDK_DPI_SCALE=1.5

## NPM
NPM_PACKAGES="${HOME}/.npm-packages"
export PATH="$PATH:$NPM_PACKAGES/bin"

## MAN

# Preserve MANPATH if you already defined it somewhere in your config.
# Otherwise, fall back to `manpath` so we can inherit from `/etc/manpath`.
export MANPATH="${MANPATH-$(manpath)}:$NPM_PACKAGES/share/man"

## KAFKA

KAFKA_HOME="$HOME/local/kafka"
if [ -d $KAFKA_HOME ]; then
    export KAFKA_HOME
    export PATH="$KAFKA_HOME/bin:$PATH"
fi

# GOOGLE

# See: https://developers.google.com/identity/protocols/application-default-credentials
#export GOOGLE_APPLICATION_CREDENTIALS="$HOME/.config/gcloud/application_default_credentials.json"

## NUBANK

export NU_COUNTRY="br"
export NU_HOME="$HOME/workspace/nu"

# NUCLI
export NUCLI_HOME="$NU_HOME/nucli"
export PATH="$NUCLI_HOME:$PATH"

# NUCLI.PY
export PATH="$NU_HOME/nucli.py/bin:$PATH"
export NUCLI_PY_FORMATTER_STYLE="bw"
# export NUCLI_PY_FULL=1

# SPARK
export SPARK_HOME="$HOME/workspace/nu/spark/2.4.3"

# V8
export V8_HOME="/usr/bin"

# PATH
export PATH="$HOME/.cabal/bin:$PATH"
export PATH="$HOME/.cask/bin:$PATH"
export PATH="$HOME/.dotfiles/bin:$PATH"
export PATH="$HOME/.local/bin:$PATH"
export PATH="$HOME/.node_modules/bin:$PATH"
export PATH="$HOME/bin:$PATH"

export PATH="/usr/local/bin:$PATH"
export PATH="/usr/local/sbin:$PATH"

## FZF

[ -r /usr/share/fzf/key-bindings.bash ] && source /usr/share/fzf/key-bindings.bash
[ -r /usr/share/fzf/completion.bash ] && source /usr/share/fzf/completion.bash

# Fix <RET> in Emacs, see: https://github.com/akermu/emacs-libvterm/issues/40
export FZF_DEFAULT_OPTS="--bind=ctrl-j:accept"

## LIBVTERM

function vterm_printf(){
    if [ -n "$TMUX" ]; then
        # tell tmux to pass the escape sequences through
        # (Source: http://permalink.gmane.org/gmane.comp.terminal-emulators.tmux.user/1324)
        printf "\ePtmux;\e\e]%s\007\e\\" "$1"
    elif [ "${TERM%%-*}" = "screen" ]; then
        # GNU screen (screen, screen-256color, screen-256color-bce)
        printf "\eP\e]%s\007\e\\" "$1"
    else
        printf "\e]%s\e\\" "$1"
    fi
}

if [[ "$INSIDE_EMACS" = 'vterm' ]]; then
    function clear(){
        vterm_printf "51;Evterm-clear-scrollback";
        tput clear;
    }
fi

# Enable directory tracking: https://github.com/akermu/emacs-libvterm#directory-tracking
vterm_prompt_end(){
    vterm_printf "51;A$(whoami)@$(hostname):$(pwd)"
}
PS1=$PS1'\[$(vterm_prompt_end)\]'

PATH="$HOME/perl5/bin${PATH:+:${PATH}}"; export PATH;
PERL5LIB="$HOME/perl5/lib/perl5${PERL5LIB:+:${PERL5LIB}}"; export PERL5LIB;
PERL_LOCAL_LIB_ROOT="$HOME/perl5${PERL_LOCAL_LIB_ROOT:+:${PERL_LOCAL_LIB_ROOT}}"; export PERL_LOCAL_LIB_ROOT;
PERL_MB_OPT="--install_base \"$HOME/perl5\""; export PERL_MB_OPT;
PERL_MM_OPT="INSTALL_BASE=$HOME/perl5"; export PERL_MM_OPT;
