# -*- mode: sh -*-

## BURNING SWELL

if [ -d "$HOME/workspace/burningswell" ]; then

    export BURNINGSWELL_HOME="$HOME/workspace/burningswell"

    if [ -e "$HOME/workspace/burningswell/deploy/burningswell/config/google/cloud/service-accounts/development.json" ]; then
        export GOOGLE_APPLICATION_CREDENTIALS=$HOME/workspace/burningswell/deploy/burningswell/config/google/cloud/service-accounts/development.json
    fi

fi

## CONFLUENT

CONFLUENT_HOME="$HOME/local/confluent-7.3.0"
if [ -d "$CONFLUENT_HOME" ]; then
    export PATH="$PATH:$CONFLUENT_HOME/bin"
fi

## Flatpak

export XDG_DATA_DIRS="$XDG_DATA_DIRS:$HOME/.local/share/flatpak/exports/share"
export XDG_DATA_DIRS="$XDG_DATA_DIRS:/var/lib/flatpak/exports/share"

## GUIX

# Setup GUIX on a foreign distro
# if [ -f /etc/profile.d/guix.sh ]; then
#     . /etc/profile.d/guix.sh
# fi

# GUIX_PROFILE="~/.guix-profile/etc/profile"
# if [ -f $GUIX_PROFILE ]; then
#     . $GUIX_PROFILE
#     echo "Loaded Guix profile: $GUIX_PROFILE"
# fi

# GUIX_PROFILE="$HOME/.guix-profile"
# if [ -d $GUIX_PROFILE ]; then
#     . "$GUIX_PROFILE/etc/profile"
#     echo "Loaded Guix profile: $GUIX_PROFILE"
# fi

# # XDG_DATA_DIRS often starts off empty, but an empty value is
# # interpreted as this value. Loading a profile can set it, though,
# # which effectively ignores the default value. We want it to instead
# # add to the default, so we set it here to the default value.
# if [ -z "$XDG_DATA_DIRS" ]; then
#     export XDG_DATA_DIRS="/usr/local/share/:/usr/share/"
# else
#     export XDG_DATA_DIRS="$XDG_DATA_DIRS:/usr/local/share/:/usr/share/"
# fi

# # GUIX_PROFILE="$HOME/.guix-extra-profiles/r0man/profiles/emacs-native-comp"
# # . "$GUIX_PROFILE/etc/profile"
# GUIX_EXTRA_PROFILES=$HOME/.guix-extra-profiles
# for i in $GUIX_EXTRA_PROFILES/*; do
#     profile=$i/$(basename "$i")
#     if [ -f "$profile"/etc/profile ]; then
#         GUIX_PROFILE="$profile"
#         . "$GUIX_PROFILE"/etc/profile
#         echo "Loaded Guix profile: $GUIX_PROFILE"
#     fi
#     unset profile
# done

## NIX

NIX_PROFILE="/run/current-system/profile/etc/profile.d/nix.sh"
if [ -e "$NIX_PROFILE" ]; then
    source "$NIX_PROFILE"
fi

## GOOGLE CLOUD SDK

if [ -d "$HOME/local/google-cloud-sdk" ]; then
    export PATH="$PATH:~/local/google-cloud-sdk/bin"

    # The next line updates PATH for the Google Cloud SDK.
    if [ -f '~/local/google-cloud-sdk/path.bash.inc' ]; then . '~/local/google-cloud-sdk/path.bash.inc'; fi

    # The next line enables shell command completion for gcloud.
    if [ -f '~/local/google-cloud-sdk/completion.bash.inc' ]; then . '~/local/google-cloud-sdk/completion.bash.inc'; fi
fi

## GPG

# # export GPG_TTY="$(tty)"
# gpgconf --launch gpg-agent
# export SSH_AUTH_SOCK=$(gpgconf --list-dirs agent-ssh-socket)
# gpgconf --launch gpg-agent
# eval $(gpg-agent --daemon)

## SSH

for i in $(ls -1 ~/.ssh/*.pub ); do
    ssh-add ${i/.pub/}
done

## SOLARIZED

export LS_COLORS="$(vivid -m 8-bit generate solarized-dark)"

## COURSIER

export PATH="$PATH:/home/roman/.local/share/coursier/bin"

## FLUTTER

export CHROME_EXECUTABLE="chromium"
export PATH="$PATH:$HOME/local/flutter/bin"

## NODE

# https://stackoverflow.com/questions/69962209/what-is-openssl-legacy-provider-in-node-js-v17
export NODE_OPTIONS="--openssl-legacy-provider"

## NPM
NPM_PACKAGES="${HOME}/.npm-packages"
export PATH="$PATH:$NPM_PACKAGES/bin"

## KAFKA

KAFKA_HOME="$HOME/local/kafka"
if [ -d $KAFKA_HOME ]; then
    export KAFKA_HOME
    export PATH="$KAFKA_HOME/bin:$PATH"
fi

## NUBANK

export NU_COUNTRY="br"
export NU_HOME="$HOME/workspace/nu"

# NUCLI
export NUCLI_HOME="$NU_HOME/nucli"
export PATH="$PATH:$NUCLI_HOME"

# NUCLI.PY
export PATH="$PATH:$NU_HOME/nucli.py/bin"
export NUCLI_PY_FORMATTER_STYLE="bw"
# export NUCLI_PY_FULL=1

# PATH
export PATH="$PATH:$HOME/.dotfiles/bin"
export PATH="$PATH:$HOME/.local/bin"
export PATH="$PATH:$HOME/.node_modules/bin"
export PATH="$PATH:$HOME/bin:$PATH"
export PATH="$PATH:/usr/local/bin"
export PATH="$PATH:/usr/local/sbin"
